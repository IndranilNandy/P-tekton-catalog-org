apiVersion: tekton.dev/v1
# apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: catalog-pr-pipeline-prereq-provider
spec:
  params:

    # For github-open-pr
    - name: github-open-pr
      type: object
      properties:
        github-host-url:
          type: string
        api-path-prefix:
          type: string
        repo-full-name:
          type: string
        github-token-secret-name:
          type: string
        github-token-secret-key:
          type: string
        auth-type:
          type: string
        head:
          type: string
        base:
          type: string
        body:
          type: string
        title:
          type: string
      default:
        github-host-url: "api.github.com"
        api-path-prefix: ""
        auth-type: "Bearer"

    # For github-set-status
    - name: github-set-status
      type: object
      properties:
        github-host-url:
          type: string
        api-path-prefix:
          type: string
        repo-full-name:
          type: string
        github-token-secret-name:
          type: string
        github-token-secret-key:
          type: string
        sha:
          type: string
        target-url:
          type: string
        description:
          type: string
        context:
          type: string
        state:
          type: string
        auth-type:
          type: string
        image:
          type: string
        shebang:
          type: string
      default:
        github-host-url: "api.github.com"
        api-path-prefix: ""
        description: "PR pipeline: Tasks should set the description individually"
        context: "ci/pr"
        # Valid values for state: One of failure/pending/success
        state: "pending"
        auth-type: "Bearer"
        image: "python:3.10.1-alpine3.15"
        shebang: /usr/bin/env python
        target-url: "$(params.common.tekton-dashboard)/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)"

    # For fetch-pr-merge-branch
    - name: fetch-pr-merge-branch
      type: object
      properties:
        base-image:
          type: string
        git-user-name:
          type: string
        git-user-email:
          type: string
        git-script:
          type: string
        user-home:
          type: string
        verbose:
          type: string
      default:
        base-image: cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
        git-user-name: ""
        git-user-email: ""
        git-script:  |
          [[ -d "$pr_source" ]] && rm -rf "$pr_source"
          mkdir -p "$pr_source"
          cd pr-"$pull_number"
          echo -e "Current dir: $(pwd)"
          git init
          git remote add upstream git@github.com:IndranilNandy/demo-app-to-test-pipeline.git
          git fetch upstream refs/pull/"$pull_number"/merge:merge-"$pull_number"
          git checkout merge-"$pull_number"
          echo -e "Current branch: $(git branch)"
        user-home: "/root"
        verbose: "true"
    - name: fetch-pr-merge-branch-script-arguments
      type: array
      default:
        - "sample_param=sample_value"

    # Pipeline commons
    - name: common
      type: object
      properties:
        tekton-dashboard:
          type: string
        pull-number:
          type: string
        # create-pr:
        #   type: string
      default:
        tekton-dashboard: "http://localhost:8090"
        pull-number: "$(tasks.create-pr.results.NUMBER)"

    # Debugging purpose
    - name: debug
      type: object
      description: all debug switches and properties
      properties:
        create-pr-disabled:
          type: string
        set-pr-status-disabled:
          type: string
        fetch-pr-merge-branch-disabled:
          type: string
        pr-build-pipeline-disabled:
          type: string
        set-build-status-disabled:
          type: string
        # build-test-publish-artifacts-disabled:
        #   type: string
      default:
        create-pr-disabled: "false"
        set-pr-status-disabled: "false"
        fetch-pr-merge-branch-disabled: "false"
        pr-build-pipeline-disabled: "false"
        set-build-status-disabled: "false"
        # build-test-publish-artifacts-disabled: "false"

  workspaces:
    - name: shared-workspace

      # workspace: shared-workspace
      # subPath: source-code/

  results:
    - name: gradle-tasks-status
      description: Gradle tasks' result; can be either 'succeeded' or 'failed'.
      value: "$(tasks.pr-pipeline.results.gradle-tasks-status)"

  tasks:
    - name: create-pr
      when:
        - input: "$(params.debug.create-pr-disabled)"
          operator: in
          values:
            - "false"
      params:
        - name: GITHUB_HOST_URL
          value: "$(params.github-open-pr.github-host-url)"
        - name: REPO_FULL_NAME
          value: "$(params.github-open-pr.repo-full-name)"
        - name: GITHUB_TOKEN_SECRET_NAME
          value: "$(params.github-open-pr.github-token-secret-name)"
        - name: GITHUB_TOKEN_SECRET_KEY
          value: "$(params.github-open-pr.github-token-secret-key)"
        - name: HEAD
          value: "$(params.github-open-pr.head)"
        - name: BASE
          value: "$(params.github-open-pr.base)"
        - name: TITLE
          value: "$(params.github-open-pr.title)"
        - name: BODY
          value: "$(params.github-open-pr.body)"

      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/scm/github-open-pr/github-open-pr.yaml

    - name: pr-pipeline
      # when:
        # - input: "$(steps.create-pr.exitCode.path)"
        #   operator: in
        #   values:
        #     - "Succeeded"
        # - input: "$(tasks.create-pr.status)"
        #   operator: in
        #   values:
        #     - "Succeeded"
      params:
        # For github-set-status task
        - name: github-set-status
          value:
            github-host-url: "$(params.github-set-status.github-host-url)"
            repo-full-name: "$(params.github-set-status.repo-full-name)"
            github-token-secret-name: "$(params.github-set-status.github-token-secret-name)"
            github-token-secret-key: "$(params.github-set-status.github-token-secret-key)"
            # sha: 559debcd6ff6ac6aa6e38e84377259d5642afca6
            sha: "$(tasks.create-pr.results.E_HEAD_SHA)"
            description: "$(params.github-set-status.description)"
            context: "$(params.github-set-status.context)"

        # For fetch-pr-merge-branch
        - name: fetch-pr-merge-branch
          value:
            base-image: "$(params.fetch-pr-merge-branch.base-image)"
            git-user-name: "$(params.fetch-pr-merge-branch.git-user-name)"
            git-user-email: "$(params.fetch-pr-merge-branch.git-user-email)"
            git-script: "$(params.fetch-pr-merge-branch.git-script)"
            user-home: "$(params.fetch-pr-merge-branch.user-home)"
            verbose: "$(params.fetch-pr-merge-branch.verbose)"
        # - name: fetch-pr-merge-branch-script-arguments
        #   # value: ["$(params.fetch-pr-merge-branch-script-arguments)"]
        #   value: ["pull_number=$(tasks.create-pr.results.NUMBER)"]
        #     # - "pull_number=115"

        # Pipeline commons
        - name: common
          value:
            tekton-dashboard: "$(params.common.tekton-dashboard)"
            pull-number: "$(params.common.pull-number)"
            # build-artifacts-root: "/tmp/myproject/build-artifacts"
            # project-build-dir-name: "build"
            # create-pr: "false"

        # Debugging purpose
        - name: debug
          value:
            set-pr-status-disabled: "$(params.debug.set-pr-status-disabled)"
            fetch-pr-merge-branch-disabled: "$(params.debug.fetch-pr-merge-branch-disabled)"
            pr-build-pipeline-disabled: "$(params.debug.pr-build-pipeline-disabled)"
            set-build-status-disabled: "$(params.debug.set-build-status-disabled)"

      taskRef:
        # apiVersion: tekton.dev/v1
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        name: pr-pipeline
        # resolver: git
        # params:
        #   - name: repo
        #     value: P-tekton-catalog-org
        #   - name: pathInRepo
        #     value: pip/pr-pipeline.yaml

      workspaces:
        - name: shared-workspace
          workspace: shared-workspace
          # subPath: source-code/

      runAfter:
        - create-pr

    - name: dummy-task1
      params:
        - name: dummy-param2
          value: "locally defined"
        - name: dummy-param3
          value: "$(tasks.pr-pipeline.results.gradle-tasks-status)"
      taskSpec:
        params:
          - name: dummy-param2
          - name: dummy-param3
            # value: "$(tasks.pr-pipeline.results.placeholder)"
        steps:
          - name: dummy-step
            image: alpine
            script: |
              echo -e dummy script
              echo -e "p2: $(params.dummy-param2)"
              echo -e "p3: $(params.dummy-param3)"

      runAfter:
        - pr-pipeline
