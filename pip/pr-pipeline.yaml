apiVersion: tekton.dev/v1
# apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-pipeline
spec:
  params:
    # For github-set-status
    - name: github-set-status
      type: object
      properties:
        github-host-url:
          type: string
        api-path-prefix:
          type: string
        repo-full-name:
          type: string
        github-token-secret-name:
          type: string
        github-token-secret-key:
          type: string
        sha:
          type: string
        target-url:
          type: string
        description:
          type: string
        context:
          type: string
        state:
          type: string
        auth-type:
          type: string
        image:
          type: string
        shebang:
          type: string
      default:
        github-host-url: "api.github.com"
        api-path-prefix: ""
        description: "PR pipeline: Tasks should set the description individually"
        context: "ci/pr"
        # Valid values for state: One of failure/pending/success
        state: "pending"
        auth-type: "Bearer"
        image: "python:3.10.1-alpine3.15"
        shebang: /usr/bin/env python
        target-url: "$(params.common.tekton-dashboard)/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)"

    # For fetch-pr-merge-branch
    - name: fetch-pr-merge-branch
      type: object
      properties:
        base-image:
          type: string
        git-user-name:
          type: string
        git-user-email:
          type: string
        git-script:
          type: string
        user-home:
          type: string
        verbose:
          type: string
      default:
        base-image: cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
        git-user-name: ""
        git-user-email: ""
        git-script: |
          [[ -d "$pr_source" ]] && rm -rf "$pr_source"
          mkdir -p "$pr_source"
          cd pr-"$pull_number"
          echo -e "Current dir: $(pwd)"
          git init
          git remote add upstream git@github.com:IndranilNandy/demo-app-to-test-pipeline.git
          git fetch upstream refs/pull/"$pull_number"/merge:merge-"$pull_number"
          git checkout merge-"$pull_number"
          echo -e "Current branch: $(git branch)"
        user-home: "/root"
        verbose: "true"
    - name: fetch-pr-merge-branch-script-arguments
      type: array
      default:
        - "pull_number=$(params.common.pull-number)"
        - "pr_source=$(params.common.pr-source)"
        # - "sample_param=sample_value"

    # Pipeline commons
    - name: common
      type: object
      properties:
        tekton-dashboard:
          type: string
        pull-number:
          type: string
        pr-source:
          type: string
        # create-pr:
        #   type: string
      default:
        tekton-dashboard: "http://localhost:8090"
        pr-source: "pr-$(params.common.pull-number)"
        # create-pr: "false"

    # Debugging purpose
    - name: debug
      type: object
      description: all debug switches and properties
      properties:
        set-github-status-pr-created-disabled:
          type: string
        fetch-pr-merge-branch-disabled:
          type: string
        # build-test-publish-artifacts-disabled:
        #   type: string
      default:
        set-github-status-pr-created-disabled: "false"
        fetch-pr-merge-branch-disabled: "false"
        # build-test-publish-artifacts-disabled: "false"

    # For pr-build-pipeline
    - name: pr-build-pipeline
      type: object
      properties:
        gradle-image:
          type: string
        common-build-artifacts-root:
          type: string
        common-project-build-dir-name:
          type: string
      default:
        gradle-image: "gradle:8.7.0-jdk17"
        common-build-artifacts-root: "/tmp/myproject/build-artifacts"
        common-project-build-dir-name: "build"

    - name: pr-build-pipeline-gradle-params-tasks
      type: array
      default:
        - build
        - publish
        - -PbuildDir=$(params.pr-build-pipeline.common-build-artifacts-root)/$(params.pr-build-pipeline.common-project-build-dir-name)
        - --console=verbose

  workspaces:
    - name: shared-workspace

  tasks:
    - name: pipeline-ctx
      taskSpec:
          steps:
            - name: ctx
              image: mirror.gcr.io/ubuntu
              script: |
                echo "Pipeline: $(context.pipeline.name)"
                echo "PipelineRun: $(context.pipelineRun.name)"
                echo "PipelineRun uid: $(context.pipelineRun.uid)"
                echo "PipelineRun namespace: $(context.pipelineRun.namespace)"

    - name: set-github-status-pr-created
      when:
        - input: "$(params.debug.set-github-status-pr-created-disabled)"
          operator: in
          values:
            - "false"
      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/scm/github-set-status/github-set-status.yaml

      params:
      - name: GITHUB_HOST_URL
        value: "$(params.github-set-status.github-host-url)"
      - name: API_PATH_PREFIX
        value: "$(params.github-set-status.api-path-prefix)"
      - name: REPO_FULL_NAME
        value: "$(params.github-set-status.repo-full-name)"
      - name: GITHUB_TOKEN_SECRET_NAME
        value: "$(params.github-set-status.github-token-secret-name)"
      - name: GITHUB_TOKEN_SECRET_KEY
        value: "$(params.github-set-status.github-token-secret-key)"
      - name: SHA
        value: "$(params.github-set-status.sha)"
      - name: TARGET_URL
        value: "$(params.github-set-status.target-url)"
      - name: DESCRIPTION
        value: "PR raised. Pending: build/test"
      - name: CONTEXT
        value: "$(params.github-set-status.context)"
      - name: STATE
        value: "pending"
      - name: AUTH_TYPE
        value: "$(params.github-set-status.auth-type)"
      - name: IMAGE
        value: "$(params.github-set-status.image)"
      - name: SHEBANG
        value: "$(params.github-set-status.shebang)"

    - name: fetch-pr-merge-branch
      when:
        - input: "$(params.debug.fetch-pr-merge-branch-disabled)"
          operator: in
          values:
            - "false"
      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/scm/git-cli/git-cli.yaml

      params:
        - name: BASE_IMAGE
          value: "$(params.fetch-pr-merge-branch.base-image)"
        - name: GIT_USER_NAME
          value: "$(params.fetch-pr-merge-branch.git-user-name)"
        - name: GIT_USER_EMAIL
          value: "$(params.fetch-pr-merge-branch.git-user-email)"
        - name: GIT_SCRIPT
          value: "$(params.fetch-pr-merge-branch.git-script)"
            # [[ -d "$pr_source" ]] && rm -rf "$pr_source"
            # mkdir -p "$pr_source"
            # cd pr-"$pull_number"
            # echo -e "Current dir: $(pwd)"
            # git init
            # git remote add upstream git@github.com:IndranilNandy/demo-app-to-test-pipeline.git
            # git fetch upstream refs/pull/"$pull_number"/merge:merge-"$pull_number"
            # git checkout merge-"$pull_number"
            # git branch
            # ls
        - name: USER_HOME
          value: "$(params.fetch-pr-merge-branch.user-home)"
        - name: VERBOSE
          value: "$(params.fetch-pr-merge-branch.verbose)"
        - name: E_SCRIPT_ARGUMENTS
          value: ["$(params.fetch-pr-merge-branch-script-arguments)"]
          # value: ["pull_number=$(params.common.pull-number)", "pr_source=$(params.common.pr-source)"]

      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: source-code/pr-merge-branch/

      runAfter:
        - set-github-status-pr-created

    - name: pr-build-pipeline
      params:
        # For git-clone task
        - name: git-clone
          value:
            url: "NA"
            revision: "NA"

        # For gradle task
        - name: gradle
          value:
            # project-dir: "$(params.common.pr-source)"
            gradle-image: "$(params.pr-build-pipeline.gradle-image)"
            project-dir: "$(params.common.pr-source)"
        - name: gradle-params-tasks
          value: ["$(params.pr-build-pipeline-gradle-params-tasks)"]
            # - build
            # - publish
            # - -PbuildDir=$(params.common.build-artifacts-root)/$(params.common.project-build-dir-name)
            # - --console=verbose
            # # - --status
            # # no improvement with --no-daemon; also gradle now doesn't suggest to disable daemong in CI
            # # - --no-daemon

        # For github-open-pr task
        - name: github-open-pr
          value:
            github-host-url: "NA"
            repo-full-name: "NA"
            github-token-secret-name: "NA"
            github-token-secret-key: "NA"
            head: "NA"
            base: "NA"
            title: "NA"
            body: "NA"

        # Pipeline commons
        - name: common
          value:
            # build-artifacts-root: "/tmp/myproject/build-artifacts"
            # project-build-dir-name: "build"
            build-artifacts-root: "$(params.pr-build-pipeline.common-build-artifacts-root)"
            project-build-dir-name: "$(params.pr-build-pipeline.common-project-build-dir-name)"
            create-pr: "false"

        # Debugging purpose
        - name: debug
          value:
            # clone-source-repo-disabled: "false"
            # build-test-publish-artifacts-disabled: "false"
            clone-source-repo-disabled: "true"
            build-test-publish-artifacts-disabled: "false"

        # Configurable sub-paths of workspaces
        - name: ws-subpath
          value:
            source-code: "source-code/pr-merge-branch/"

      workspaces:
        - name: shared-workspace
          workspace: shared-workspace
          # subPath: source-code/pr-merge-branch/

      taskRef:
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        name: build-pipeline
        # resolver: git
        # params:
        #   - name: repo
        #     value: P-tekton-catalog-org
        #   - name: pathInRepo
        #     value: pip/build-pipeline.yaml

      runAfter:
        - fetch-pr-merge-branch


