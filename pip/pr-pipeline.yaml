apiVersion: tekton.dev/v1
# apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-pipeline
spec:
  params:

    # For trigger-information
    - name: trigger-info
      type: object
      properties:
        eventID:
          type: string
        message:
          type: string
        environment:
          type: string
        event-type:
          type: string
        event-contenttype:
          type: string
        event-github-delivery-id:
          type: string
        event-github-hook-id:
          type: string
        event-webhook-deliveries-url:
          type: string
        git-event-action:
          type: string
        git-pr-number:
          type: string
        git-pr-url:
          type: string
        git-pr-diff-url:
          type: string
        git-pr-state:
          type: string
        git-pr-locked:
          type: string
        git-pr-title:
          type: string
        git-pr-body:
          type: string
        git-pr-user:
          type: string
        git-pr-author-association:
          type: string
        git-pr-assignees:
          type: string
        git-pr-head-branch:
          type: string
        git-pr-head-sha:
          type: string
        git-pr-head-repo-name:
          type: string
        git-pr-head-repo-full-name:
          type: string
        git-pr-head-repo-url:
          type: string
        git-pr-base-branch:
          type: string
        git-pr-base-sha:
          type: string
        git-pr-base-repo-name:
          type: string
        git-pr-base-repo-full-name:
          type: string
        git-pr-base-repo-url:
          type: string
        git-pr-links-self:
          type: string
        git-pr-links-issue:
          type: string
        git-pr-links-comments:
          type: string
        git-pr-links-review-comments:
          type: string
        git-pr-links-commits:
          type: string
        git-pr-links-statuses:
          type: string
        git-repo-url:
          type: string
        git-repo-ssh-url:
          type: string
        git-repo-full-name:
          type: string
        git-repo-open-issues-count:
          type: string
        git-repo-default-branch:
          type: string
        git-sender:
          type: string
      default:
        eventID: "NA"
        message: "NA"
        environment: "NA"
        event-type: "NA"
        event-contenttype: "NA"
        event-github-delivery-id: "NA"
        event-github-hook-id: "NA"
        event-webhook-deliveries-url: "NA"
        event-webhook-triggered: "false"
        git-event-action: "NA"
        git-pr-number: "NA"
        git-pr-url: "NA"
        git-pr-diff-url: "NA"
        git-pr-state: "NA"
        git-pr-locked: "NA"
        git-pr-title: "NA"
        git-pr-body: "NA"
        git-pr-user: "NA"
        git-pr-author-association: "NA"
        git-pr-assignees: "NA"
        git-pr-head-branch: "NA"
        git-pr-head-sha: "NA"
        git-pr-head-repo-name: "NA"
        git-pr-head-repo-full-name: "NA"
        git-pr-head-repo-url: "NA"
        git-pr-base-branch: "NA"
        git-pr-base-sha: "NA"
        git-pr-base-repo-name: "NA"
        git-pr-base-repo-full-name: "NA"
        git-pr-base-repo-url: "NA"
        git-pr-links-self: "NA"
        git-pr-links-issue: "NA"
        git-pr-links-comments: "NA"
        git-pr-links-review-comments: "NA"
        git-pr-links-commits: "NA"
        git-pr-links-statuses: "NA"
        git-repo-url: "NA"
        git-repo-ssh-url: "NA"
        git-repo-full-name: "NA"
        git-repo-open-issues-count: "NA"
        git-repo-default-branch: "NA"
        git-sender: "NA"

    # For github-set-status
    - name: github-set-status
      type: object
      properties:
        github-host-url:
          type: string
        api-path-prefix:
          type: string
        repo-full-name:
          type: string
        github-token-secret-name:
          type: string
        github-token-secret-key:
          type: string
        # sha:
        #   type: string
        target-url:
          type: string
        description:
          type: string
        context:
          type: string
        state:
          type: string
        auth-type:
          type: string
        image:
          type: string
        shebang:
          type: string
      default:
        github-host-url: "api.github.com"
        api-path-prefix: ""
        description: "[Pipelines: PR]"
        context: "ci/pr"
        # Valid values for state: One of failure/pending/success
        state: "pending"
        auth-type: "Bearer"
        image: "python:3.10.1-alpine3.15"
        shebang: /usr/bin/env python
        target-url: "$(params.common.tekton-dashboard)/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)"

    # For fetch-pr-merge-branch
    - name: fetch-pr-merge-branch
      type: object
      properties:
        base-image:
          type: string
        git-user-name:
          type: string
        git-user-email:
          type: string
        git-script:
          type: string
        user-home:
          type: string
        verbose:
          type: string
      default:
        base-image: cgr.dev/chainguard/git:root-2.39@sha256:7759f87050dd8bacabe61354d75ccd7f864d6b6f8ec42697db7159eccd491139
        git-user-name: ""
        git-user-email: ""
        git-script: |
          [[ -d "$pr_source" ]] && rm -rf "$pr_source"
          mkdir -p "$pr_source"
          cd pr-"$pull_number"
          echo -e "Current dir: $(pwd)"
          git init
          git remote add upstream git@github.com:IndranilNandy/demo-app-to-test-pipeline.git
          git fetch upstream refs/pull/"$pull_number"/merge:merge-"$pull_number"
          git checkout merge-"$pull_number"
          echo -e "Current branch: $(git branch)"
        user-home: "/root"
        verbose: "true"
    - name: fetch-pr-merge-branch-script-arguments
      type: array
      default:
        - "pull_number=$(params.common.pull-number)"
        - "pr_source=$(params.common.pr-source)"

    # For pr-build-pipeline
    - name: pr-build-pipeline
      type: object
      properties:

        # gh-set-status-github-host-url:
        #   type: string
        # gh-set-status-api-path-prefix:
        #   type: string
        # gh-set-status-repo-full-name:
        #   type: string
        # gh-set-status-github-token-secret-name:
        #   type: string
        # gh-set-status-github-token-secret-key:
        #   type: string
        # # gh-set-status-sha:
        # #   type: string
        gh-set-status-target-url:
          type: string
        gh-set-status-description:
          type: string
        # gh-set-status-context:
        #   type: string
        # gh-set-status-state:
        #   type: string
        # gh-set-status-auth-type:
        #   type: string
        # gh-set-status-image:
        #   type: string
        # gh-set-status-shebang:
        #   type: string

        gradle-image:
          type: string
        gradle-user-home:
          type: string
        # gradle-project-build-dir:
        #   type: string
        gradle-task-onerror:
          type: string

        common-build-artifacts-root:
          type: string
        common-project-build-dir-name:
          type: string
      default:
        # gh-set-status-github-host-url: "api.github.com"
        # gh-set-status-api-path-prefix: ""
        # # gh-set-status-sha: "$(tasks.clone-source-repo.results.commit)"
        gh-set-status-description: "[Pipelines: PR --> Build]"
        # gh-set-status-context: "trunk/slfb"
        # # Valid values for state: One of failure/pending/success
        # gh-set-status-state: "pending"
        # gh-set-status-auth-type: "Bearer"
        # gh-set-status-image: "python:3.10.1-alpine3.15"
        # gh-set-status-shebang: /usr/bin/env python
        gh-set-status-target-url: "$(params.common.tekton-dashboard)/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)"

        gradle-image: "gradle:8.7.0-jdk17"
        gradle-user-home: "/home/gradle"
        # gradle-project-build-dir: "$(params.common.build-artifacts-root)/$(params.common.project-build-dir-name)"
        gradle-task-onerror: "continue"

        common-build-artifacts-root: "/tmp/myproject/build-artifacts"
        common-project-build-dir-name: "build"
    - name: pr-build-pipeline-gradle-params-tasks
      type: array
      default:
        - build
        - publish
        - -PbuildDir=$(params.pr-build-pipeline.common-build-artifacts-root)/$(params.pr-build-pipeline.common-project-build-dir-name)
        # - --status
        # no improvement with --no-daemon; also gradle now doesn't suggest to disable daemong in CI
        # - --no-daemon
        - --console=verbose

    # Pipeline commons
    - name: common
      type: object
      properties:
        # build-artifacts-root:
        #   type: string
        # project-build-dir-name:
        #   type: string
        tekton-dashboard:
          type: string
        pull-number:
          type: string
        pr-source:
          type: string
        pr-head-sha:
          type: string
      default:
        # build-artifacts-root: "/tmp/myproject/build-artifacts"
        # project-build-dir-name: "build"
        tekton-dashboard: "http://localhost:8090"
        pr-source: "pr-$(params.common.pull-number)"

    # Debugging purpose
    - name: debug
      type: object
      description: all debug switches and properties
      properties:
        set-pr-status-disabled:
          type: string
        fetch-pr-merge-branch-disabled:
          type: string
        pr-build-pipeline-disabled:
          type: string
        set-build-status-disabled:
          type: string
      default:
        set-pr-status-disabled: "false"
        fetch-pr-merge-branch-disabled: "false"
        pr-build-pipeline-disabled: "false"
        set-build-status-disabled: "false"

    # Configurable sub-paths of workspaces
    - name: ws-subpath
      type: object
      description: configurable sub-paths of workspaces
      properties:
        source-code:
          type: string
      default:
        source-code: "source-code/pr-merge-branch/"

  workspaces:
    - name: shared-workspace

  results:
    - name: gradle-tasks-status
      description: Gradle tasks' result; can be either 'succeeded' or 'failed'.
      value: "$(tasks.pr-build-pipeline.results.gradle-tasks-status)"

  tasks:
    - name: pipeline-ctx
      taskSpec:
          steps:
            - name: ctx
              image: mirror.gcr.io/ubuntu
              script: |
                echo "Pipeline: $(context.pipeline.name)"
                echo "PipelineRun: $(context.pipelineRun.name)"
                echo "PipelineRun uid: $(context.pipelineRun.uid)"
                echo "PipelineRun namespace: $(context.pipelineRun.namespace)"

    - name: trigger-information
      when:
        - input: "$(params.trigger-info.event-type)"
          operator: in
          values:
            - "pull_request"
      params:
        - name: eventID
          value: "$(params.trigger-info.eventID)"
        - name: message
          value: "$(params.trigger-info.message)"
        - name: environment
          value: "$(params.trigger-info.environment)"

        - name: event-type
          value: "$(params.trigger-info.event-type)"
        - name: event-contenttype
          value: "$(params.trigger-info.event-contenttype)"
        - name: event-github-delivery-id
          value: "$(params.trigger-info.event-github-delivery-id)"
        - name: event-github-hook-id
          value: "$(params.trigger-info.event-github-hook-id)"
        - name: event-webhook-deliveries-url
          value: "$(params.trigger-info.event-webhook-deliveries-url)"

        - name: git-event-action
          value: "$(params.trigger-info.git-event-action)"

        - name: git-pr-number
          value: "$(params.trigger-info.git-pr-number)"
        - name: git-pr-url
          value: "$(params.trigger-info.git-pr-url)"
        - name: git-pr-diff-url
          value: "$(params.trigger-info.git-pr-diff-url)"
        - name: git-pr-state
          value: "$(params.trigger-info.git-pr-state)"
        - name: git-pr-locked
          value: "$(params.trigger-info.git-pr-locked)"
        - name: git-pr-title
          value: "$(params.trigger-info.git-pr-title)"
        - name: git-pr-body
          value: "$(params.trigger-info.git-pr-body)"
        - name: git-pr-user
          value: "$(params.trigger-info.git-pr-user)"
        - name: git-pr-author-association
          value: "$(params.trigger-info.git-pr-author-association)"
        - name: git-pr-assignees
          value: "$(params.trigger-info.git-pr-assignees)"

        - name: git-pr-head-branch
          value: "$(params.trigger-info.git-pr-head-branch)"
        - name: git-pr-head-sha
          value: "$(params.trigger-info.git-pr-head-sha)"
        - name: git-pr-head-repo-name
          value: "$(params.trigger-info.git-pr-head-repo-name)"
        - name: git-pr-head-repo-full-name
          value: "$(params.trigger-info.git-pr-head-repo-full-name)"
        - name: git-pr-head-repo-url
          value: "$(params.trigger-info.git-pr-head-repo-url)"

        - name: git-pr-base-branch
          value: "$(params.trigger-info.git-pr-base-branch)"
        - name: git-pr-base-sha
          value: "$(params.trigger-info.git-pr-base-sha)"
        - name: git-pr-base-repo-name
          value: "$(params.trigger-info.git-pr-base-repo-name)"
        - name: git-pr-base-repo-full-name
          value: "$(params.trigger-info.git-pr-base-repo-full-name)"
        - name: git-pr-base-repo-url
          value: "$(params.trigger-info.git-pr-base-repo-url)"

        - name: git-pr-links-self
          value: "$(params.trigger-info.git-pr-links-self)"
        - name: git-pr-links-issue
          value: "$(params.trigger-info.git-pr-links-issue)"
        - name: git-pr-links-comments
          value: "$(params.trigger-info.git-pr-links-comments)"
        - name: git-pr-links-review-comments
          value: "$(params.trigger-info.git-pr-links-review-comments)"
        - name: git-pr-links-commits
          value: "$(params.trigger-info.git-pr-links-commits)"
        - name: git-pr-links-statuses
          value: "$(params.trigger-info.git-pr-links-statuses)"

        - name: git-repo-url
          value: "$(params.trigger-info.git-repo-url)"
        - name: git-repo-ssh-url
          value: "$(params.trigger-info.git-repo-ssh-url)"
        - name: git-repo-full-name
          value: "$(params.trigger-info.git-repo-full-name)"
        - name: git-repo-open-issues-count
          value: "$(params.trigger-info.git-repo-open-issues-count)"
        - name: git-repo-default-branch
          value: "$(params.trigger-info.git-repo-default-branch)"

        - name: git-sender
          value: "$(params.trigger-info.git-sender)"

      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/tekton-context/trigger-info/trigger-info-pr.yaml

      runAfter:
        - "pipeline-ctx"

    - name: set-pr-status
      when:
        - input: "$(params.debug.set-pr-status-disabled)"
          operator: in
          values:
            - "false"
      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/scm/github-set-status/github-set-status.yaml

      params:
      - name: GITHUB_HOST_URL
        value: "$(params.github-set-status.github-host-url)"
      - name: API_PATH_PREFIX
        value: "$(params.github-set-status.api-path-prefix)"
      - name: REPO_FULL_NAME
        value: "$(params.github-set-status.repo-full-name)"
      - name: GITHUB_TOKEN_SECRET_NAME
        value: "$(params.github-set-status.github-token-secret-name)"
      - name: GITHUB_TOKEN_SECRET_KEY
        value: "$(params.github-set-status.github-token-secret-key)"
      - name: SHA
        value: "$(params.common.pr-head-sha)"
      - name: TARGET_URL
        value: "$(params.github-set-status.target-url)"
      - name: DESCRIPTION
        value: "$(params.github-set-status.description) PR raised. Pending: build/test"
      - name: CONTEXT
        value: "$(params.github-set-status.context)"
      - name: STATE
        value: "pending"
      - name: AUTH_TYPE
        value: "$(params.github-set-status.auth-type)"
      - name: IMAGE
        value: "$(params.github-set-status.image)"
      - name: SHEBANG
        value: "$(params.github-set-status.shebang)"

    - name: fetch-pr-merge-branch
      when:
        - input: "$(params.debug.fetch-pr-merge-branch-disabled)"
          operator: in
          values:
            - "false"
      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/scm/git-cli/git-cli.yaml

      params:
        - name: BASE_IMAGE
          value: "$(params.fetch-pr-merge-branch.base-image)"
        - name: GIT_USER_NAME
          value: "$(params.fetch-pr-merge-branch.git-user-name)"
        - name: GIT_USER_EMAIL
          value: "$(params.fetch-pr-merge-branch.git-user-email)"
        - name: GIT_SCRIPT
          value: "$(params.fetch-pr-merge-branch.git-script)"
        - name: USER_HOME
          value: "$(params.fetch-pr-merge-branch.user-home)"
        - name: VERBOSE
          value: "$(params.fetch-pr-merge-branch.verbose)"
        - name: E_SCRIPT_ARGUMENTS
          value: ["$(params.fetch-pr-merge-branch-script-arguments)"]

      workspaces:
        - name: source
          workspace: shared-workspace
          subPath: "$(params.ws-subpath.source-code)"

      runAfter:
        - set-pr-status

    - name: pr-build-pipeline
      when:
        - input: "$(params.debug.pr-build-pipeline-disabled)"
          operator: in
          values:
            - "false"

      params:
        # For github-set-status task
        - name: github-set-status
          value:
            github-host-url: "$(params.github-set-status.github-host-url)"
            api-path-prefix: "$(params.github-set-status.api-path-prefix)"
            repo-full-name: "$(params.github-set-status.repo-full-name)"
            github-token-secret-name: "$(params.github-set-status.github-token-secret-name)"
            github-token-secret-key: "$(params.github-set-status.github-token-secret-key)"
            sha: "$(params.common.pr-head-sha)"
            # target-url: "$(params.pr-build-pipeline.gh-set-status-target-url)"
            description: "$(params.pr-build-pipeline.gh-set-status-description)"
            context: "$(params.github-set-status.context)"
            # state: "$(params.pr-build-pipeline.gh-set-status-state)"
            auth-type: "$(params.github-set-status.auth-type)"
            image: "$(params.github-set-status.image)"
            shebang: "$(params.github-set-status.shebang)"

        # For git-clone task
        - name: git-clone
          value:
            url: "NA"
            revision: "NA"

        # For gradle task
        - name: gradle
          value:
            gradle-image: "$(params.pr-build-pipeline.gradle-image)"
            project-dir: "$(params.common.pr-source)"
            gradle-user-home: "$(params.pr-build-pipeline.gradle-user-home)"
            task-onerror: "$(params.pr-build-pipeline.gradle-task-onerror)"
        - name: gradle-params-tasks
          value: ["$(params.pr-build-pipeline-gradle-params-tasks)"]

        # For github-open-pr task
        - name: github-open-pr
          value:
            github-host-url: "NA"
            repo-full-name: "NA"
            github-token-secret-name: "NA"
            github-token-secret-key: "NA"
            head: "NA"
            base: "NA"
            title: "NA"
            body: "NA"

        # Pipeline commons
        - name: common
          value:
            build-artifacts-root: "$(params.pr-build-pipeline.common-build-artifacts-root)"
            project-build-dir-name: "$(params.pr-build-pipeline.common-project-build-dir-name)"
            create-pr: "false"
            tekton-dashboard: "$(params.common.tekton-dashboard)"

        # Debugging purpose
        - name: debug
          value:
            clone-source-repo-disabled: "true"
            set-pre-build-status-disabled: "false"
            build-test-publish-artifacts-disabled: "false"
            set-post-build-status-disabled: "false"
            create-pr-disabled: "true"

        # Configurable sub-paths of workspaces
        - name: ws-subpath
          value:
            source-code: "$(params.ws-subpath.source-code)"

      workspaces:
        - name: shared-workspace
          workspace: shared-workspace

      taskRef:
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        name: build-pipeline
        # resolver: git
        # params:
        #   - name: repo
        #     value: P-tekton-catalog-org
        #   - name: pathInRepo
        #     value: pip/build-pipeline.yaml

      runAfter:
        - fetch-pr-merge-branch

    - name: set-build-status
      when:
        - input: "$(params.debug.set-build-status-disabled)"
          operator: in
          values:
            - "false"
      taskRef:
        resolver: git
        params:
          - name: repo
            value: P-tekton-catalog-org
          - name: pathInRepo
            value: task/scm/github-set-status/github-set-status.yaml

      params:
      - name: GITHUB_HOST_URL
        value: "$(params.github-set-status.github-host-url)"
      - name: API_PATH_PREFIX
        value: "$(params.github-set-status.api-path-prefix)"
      - name: REPO_FULL_NAME
        value: "$(params.github-set-status.repo-full-name)"
      - name: GITHUB_TOKEN_SECRET_NAME
        value: "$(params.github-set-status.github-token-secret-name)"
      - name: GITHUB_TOKEN_SECRET_KEY
        value: "$(params.github-set-status.github-token-secret-key)"
      - name: SHA
        value: "$(params.common.pr-head-sha)"
      - name: TARGET_URL
        value: "$(params.github-set-status.target-url)"
      - name: DESCRIPTION
        value: "$(params.github-set-status.description) Build status: $(tasks.pr-build-pipeline.results.gradle-tasks-status)"
      - name: CONTEXT
        value: "$(params.github-set-status.context)"
      - name: STATE
        value: "$(tasks.pr-build-pipeline.results.gradle-tasks-status)"
      - name: AUTH_TYPE
        value: "$(params.github-set-status.auth-type)"
      - name: IMAGE
        value: "$(params.github-set-status.image)"
      - name: SHEBANG
        value: "$(params.github-set-status.shebang)"
      - name: E_SHOULD_FAIL_ON_FAILURE_STATE
        value: "true"

      runAfter:
        - pr-build-pipeline

